# app.py

import streamlit as st
import random

# ================== –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –ë–ê–ó–ê –î–ê–ù–ù–´–• ==================
chemical_data_full = {
    "–ê–ª–∫–∞–Ω—ã": {
        "–ú–µ—Ç–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH4", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH4", "—Ñ–∞–∫—Ç": "–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ –≥–∞–∑–∞."},
        "–≠—Ç–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C2H6", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH3", "—Ñ–∞–∫—Ç": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —ç—Ç–∏–ª–µ–Ω–∞."},
        "–ü—Ä–æ–ø–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C3H8", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH2-CH3", "—Ñ–∞–∫—Ç": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –±–∞–ª–ª–æ–Ω–∞—Ö –¥–ª—è –≥—Ä–∏–ª–µ–π –∏ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö –ø–ª–∏—Ç."},
    },
    "–°–ø–∏—Ä—Ç—ã –∏ –§–µ–Ω–æ–ª—ã": {
        "–ú–µ—Ç–∞–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH3OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-OH", "—Ñ–∞–∫—Ç": "–°–∏–ª—å–Ω—ã–π —è–¥, —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω –∫–∞–∫ –¥—Ä–µ–≤–µ—Å–Ω—ã–π —Å–ø–∏—Ä—Ç."},
        "–≠—Ç–∞–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C2H5OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH2-OH", "—Ñ–∞–∫—Ç": "–î–µ–π—Å—Ç–≤—É—é—â–µ–µ –≤–µ—â–µ—Å—Ç–≤–æ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤."},
        "–§–µ–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C6H5OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "C6H5-OH", "—Ñ–∞–∫—Ç": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–∞–∫ –æ–¥–∏–Ω –∏–∑ –ø–µ—Ä–≤—ã—Ö –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫–æ–≤ (–∫–∞—Ä–±–æ–ª–∫–∞)."}
    },
    "–ö–∞—Ä–±–æ–Ω–æ–≤—ã–µ –∫–∏—Å–ª–æ—Ç—ã": {
        "–ú—É—Ä–∞–≤—å–∏–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "HCOOH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "H-COOH", "—Ñ–∞–∫—Ç": "–°–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –≤—ã–¥–µ–ª–µ–Ω–∏—è—Ö –º—É—Ä–∞–≤—å–µ–≤ –∏ –≤ –∂–≥—É—á–∏—Ö –≤–æ–ª–æ—Å–∫–∞—Ö –∫—Ä–∞–ø–∏–≤—ã."},
        "–£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH3COOH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-COOH", "—Ñ–∞–∫—Ç": "–ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–æ–ª–æ–≤–æ–≥–æ —É–∫—Å—É—Å–∞."},
    }
}
# =====================================================================

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ ---
# –î–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
if 'answered_questions' not in st.session_state:
    st.session_state.answered_questions = []
if 'current_question' not in st.session_state:
    st.session_state.current_question = None
if 'show_answer' not in st.session_state:
    st.session_state.show_answer = False
if 'game_mode' not in st.session_state:
    st.session_state.game_mode = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π"

def reset_game(category, mode):
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏–≥—Ä—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ä–µ–∂–∏–º–∞."""
    st.session_state.answered_questions = []
    st.session_state.game_mode = mode
    get_new_question(category)
    st.session_state.show_answer = False

def get_new_question(category):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π, –µ—â–µ –Ω–µ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å."""
    st.session_state.show_answer = False
    if category == "–°–º–µ—à–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º":
        # –ö–æ–¥ –¥–ª—è —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...
        pass # –£–ø—Ä–æ—Å—Ç–∏–º –ø—Ä–∏–º–µ—Ä, –æ—Å—Ç–∞–≤–∏–≤ —Ç–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    else:
        full_list = list(chemical_data_full[category].keys())
        # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑ —Ç–µ—Ö, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏
        unanswered_list = [q for q in full_list if q not in st.session_state.answered_questions]
        
        if not unanswered_list:
            st.session_state.current_question = None # –í–æ–ø—Ä–æ—Å—ã –∫–æ–Ω—á–∏–ª–∏—Å—å
            return
            
        compound_name = random.choice(unanswered_list)

    formulas = chemical_data_full[category][compound_name]
    formula_type = random.choice(["–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è"])
    
    st.session_state.current_question = {
        "name": compound_name,
        "formula_type": formula_type,
        "formula": formulas[formula_type],
        "fact": formulas["—Ñ–∞–∫—Ç"]
    }

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

st.set_page_config(layout="wide")
st.title("üß™ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª")

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å ---
with st.sidebar:
    st.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã")
    selected_category = st.selectbox(
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        list(chemical_data_full.keys())
    )
    
    # --- –ù–û–í–û–ï: –ë–ª–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã ---
    selected_mode = st.radio(
        "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:",
        ["–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (–ù–∞–∑–≤–∞–Ω–∏–µ -> –§–æ—Ä–º—É–ª–∞)", "–û–±—Ä–∞—Ç–Ω—ã–π (–§–æ—Ä–º—É–ª–∞ -> –ù–∞–∑–≤–∞–Ω–∏–µ)"],
        key="game_mode_selector"
    )

    # --- –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞/—Å–±—Ä–æ—Å–∞ –∏–≥—Ä—ã ---
    if st.button("–ù–∞—á–∞—Ç—å / –°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É", use_container_width=True):
        reset_game(selected_category, selected_mode)
        st.rerun()

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ ---
if not st.session_state.current_question:
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Ä–µ–∂–∏–º –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å / –°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É'.")
else:
    # --- –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞ ---
    col1, col2 = st.columns([2, 1.5])

    with col1:
        q = st.session_state.current_question
        mode = st.session_state.game_mode
        
        # --- –ù–û–í–û–ï: –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –∏–≥—Ä—ã ---
        if mode == "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (–ù–∞–∑–≤–∞–Ω–∏–µ -> –§–æ—Ä–º—É–ª–∞)":
            st.write(f"–í–≤–µ–¥–∏—Ç–µ **{q['formula_type']}** —Ñ–æ—Ä–º—É–ª—É –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:")
            st.info(f"## {q['name']}")
            correct_answer = q['formula']
        else: # –û–±—Ä–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º
            st.write(f"–í–≤–µ–¥–∏—Ç–µ **–Ω–∞–∑–≤–∞–Ω–∏–µ** —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—É–ª—ã:")
            st.info(f"## `{q['formula']}`")
            correct_answer = q['name']

        user_answer = st.text_input("–í–∞—à –æ—Ç–≤–µ—Ç:", key="user_input", disabled=st.session_state.show_answer)

        # --- –ò–ó–ú–ï–ù–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ ---
        if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", disabled=st.session_state.show_answer, use_container_width=True):
            cleaned_user = user_answer.strip().upper().replace("-", "")
            cleaned_correct = correct_answer.strip().upper().replace("-", "")
            
            if cleaned_user == cleaned_correct:
                st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
                st.session_state.answered_questions.append(q['name'])
            else:
                st.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: **{correct_answer}**")
            
            st.session_state.show_answer = True
            st.rerun()

        if st.session_state.show_answer:
            st.markdown(f"**üí° –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:** {q['fact']}")
            if st.button("–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", use_container_width=True):
                get_new_question(selected_category)
                st.rerun()

    with col2:
        # --- –ù–û–í–û–ï: –ü–∞–Ω–µ–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ —Å—á–µ—Ç–∞ ---
        st.subheader("–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å")
        total_questions = len(chemical_data_full[selected_category])
        answered_count = len(st.session_state.answered_questions)
        
        # –°—á–∏—Ç–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (–ø—Ä–æ—Å—Ç–æ–π —Å—á–µ—Ç—á–∏–∫)
        score = answered_count
        st.metric(label="–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤", value=f"{score} –∏–∑ {total_questions}")
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        progress = answered_count / total_questions
        st.progress(progress, text=f"{progress:.0%} –ø—Ä–æ–π–¥–µ–Ω–æ")

        if answered_count == total_questions:
            st.balloons()
            st.success("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∏–∑—É—á–∏–ª–∏ –≤—Å—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é!")
