# app.py (Final Stable Version with Self-Correction Drawing)

import streamlit as st
import random
import os
import pandas as pd
from PIL import Image

# --- –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–¥–µ–∂–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è ---
from streamlit_drawable_canvas import st_canvas

# ================== –ë–ê–ó–ê –î–ê–ù–ù–´–• –° –ò–ú–ï–ù–ê–ú–ò –§–ê–ô–õ–û–í ==================
chemical_data_full = {
    "–ê—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã": {
        "–ë–µ–Ω–∑–æ–ª": {"image": "–ë–µ–Ω–∑–æ–ª.png", "—Ñ–∞–∫—Ç": "–ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∞—Ä–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É–≥–ª–µ–≤–æ–¥–æ—Ä–æ–¥."},
        "–§–µ–Ω–æ–ª": {"image": "–§–µ–Ω–æ–ª.png", "—Ñ–∞–∫—Ç": "–ü—Ä–æ—è–≤–ª—è–µ—Ç —Å–ª–∞–±—ã–µ –∫–∏—Å–ª–æ—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞."},
        "–ê–Ω–∏–ª–∏–Ω": {"image": "–ê–Ω–∏–ª–∏–Ω.png", "—Ñ–∞–∫—Ç": "–û—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ –º–Ω–æ–≥–∏—Ö –∫—Ä–∞—Å–∏—Ç–µ–ª–µ–π."},
    },
    "–°–ø–∏—Ä—Ç—ã": {
        "–ú–µ—Ç–∞–Ω–æ–ª": {"image": "–ú–µ—Ç–∞–Ω–æ–ª.png", "—Ñ–∞–∫—Ç": "–°–∏–ª—å–Ω—ã–π —è–¥, –≤—ã–∑—ã–≤–∞–µ—Ç —Å–ª–µ–ø–æ—Ç—É –∏ —Å–º–µ—Ä—Ç—å."},
        "–≠—Ç–∞–Ω–æ–ª": {"image": "–≠—Ç–∞–Ω–æ–ª.png", "—Ñ–∞–∫—Ç": "–ü–æ–ª—É—á–∞—é—Ç —Å–ø–∏—Ä—Ç–æ–≤—ã–º –±—Ä–æ–∂–µ–Ω–∏–µ–º —É–≥–ª–µ–≤–æ–¥–æ–≤."},
    },
    # ... –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ —Ç–æ–º—É –∂–µ –ø—Ä–∏–Ω—Ü–∏–ø—É
}
# =====================================================================

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ ---
if 'current_question' not in st.session_state:
    st.session_state.current_question = None
if 'show_answer' not in st.session_state:
    st.session_state.show_answer = False

def reset_game(category):
    get_new_question(category)
    st.session_state.show_answer = False

def get_new_question(category):
    st.session_state.show_answer = False
    
    compounds_with_images = []
    for name, data in chemical_data_full[category].items():
        image_path = os.path.join("images", data.get("image", ""))
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if os.path.exists(image_path):
            compounds_with_images.append(name)

    if not compounds_with_images:
        st.session_state.current_question = "no_images"
        return

    compound_name = random.choice(compounds_with_images)
    data = chemical_data_full[category][compound_name]
    
    st.session_state.current_question = {
        "name": compound_name,
        "image_path": os.path.join("images", data["image"]),
        "fact": data.get("fact", "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω.")
    }

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
st.set_page_config(layout="wide")
st.title("‚úçÔ∏è –¢—Ä–µ–Ω–∞–∂–µ—Ä –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é —Å—Ç—Ä—É–∫—Ç—É—Ä")

with st.sidebar:
    st.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    categories = list(chemical_data_full.keys())
    selected_category = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", categories, index=0)
    
    if st.button("–ù–∞—á–∞—Ç—å / –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å", use_container_width=True):
        reset_game(selected_category)
        st.rerun()

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ ---
if st.session_state.current_question == "no_images":
    st.warning(f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{selected_category}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ 'images'.")
elif not st.session_state.current_question:
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å' –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞.")
else:
    q = st.session_state.current_question
    
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("–ù–∞—Ä–∏—Å—É–π—Ç–µ –æ—Ç —Ä—É–∫–∏:")
        st.info(f"## {q['name']}")

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ö–æ–ª—Å—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
        canvas_result = st_canvas(
            fill_color="rgba(255, 165, 0, 0.3)",  # –¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
            stroke_width=3,
            stroke_color="#FFFFFF", # –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
            background_color="#0E1117", # –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
            height=400,
            width=500,
            drawing_mode="freedraw",
            key="canvas",
        )

    with col2:
        st.subheader("–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:")
        
        if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç", use_container_width=True):
            st.session_state.show_answer = True

        if st.session_state.show_answer:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            try:
                image = Image.open(q["image_path"])
                st.image(image, caption="–≠—Ç–∞–ª–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
                st.markdown(f"**üí° –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:** {q['fact']}")
            except FileNotFoundError:
                st.error(f"–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {q['image_path']}")
