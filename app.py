# app.py

import streamlit as st
import random

# ================== –ë–ê–ó–ê –î–ê–ù–ù–´–• –•–ò–ú–ò–ß–ï–°–ö–ò–• –§–û–†–ú–£–õ ==================
# –¢–∞ –∂–µ —Å–∞–º–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –∏ —Ä–∞–Ω—å—à–µ
chemical_data_full = {
    "–ê–ª–∫–∞–Ω—ã": {
        "–ú–µ—Ç–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH4", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH4"},
        "–≠—Ç–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C2H6", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH3"},
        "–ü—Ä–æ–ø–∞–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C3H8", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH2-CH3"},
    },
    "–°–ø–∏—Ä—Ç—ã –∏ –§–µ–Ω–æ–ª—ã": {
        "–ú–µ—Ç–∞–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH3OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-OH"},
        "–≠—Ç–∞–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C2H5OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CH2-OH"},
        "–§–µ–Ω–æ–ª": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C6H5OH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "C6H5-OH"}
    },
    "–ö–∞—Ä–±–æ–Ω–æ–≤—ã–µ –∫–∏—Å–ª–æ—Ç—ã": {
        "–ú—É—Ä–∞–≤—å–∏–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "HCOOH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "H-COOH"},
        "–£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "CH3COOH", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-COOH"},
    },
    "–ê–ª—å–¥–µ–≥–∏–¥—ã –∏ –ö–µ—Ç–æ–Ω—ã": {
        "–ê—Ü–µ—Ç–∞–ª—å–¥–µ–≥–∏–¥": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C2H4O", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CHO"},
        "–ê—Ü–µ—Ç–æ–Ω": {"–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è": "C3H6O", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è": "CH3-CO-CH3"}
    },
}
# =====================================================================

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ (—á—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–ª–∏—Å—å)
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'current_question' not in st.session_state:
    st.session_state.current_question = None
if 'category' not in st.session_state:
    st.session_state.category = None


def get_new_question(category):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ session_state."""
    if category == "–°–º–µ—à–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º":
        all_formulas = {}
        for topic_dict in chemical_data_full.values():
            all_formulas.update(topic_dict)
        formulas_to_learn = all_formulas
    else:
        formulas_to_learn = chemical_data_full[category]
    
    compound_name = random.choice(list(formulas_to_learn.keys()))
    formulas = formulas_to_learn[compound_name]
    formula_type = random.choice(["–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è", "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è"])
    correct_answer = formulas[formula_type]
    
    st.session_state.current_question = {
        "compound": compound_name,
        "type": formula_type,
        "answer": correct_answer,
        "all_formulas": formulas
    }

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

st.title("üß™ –¢—Ä–µ–Ω–∞–∂–µ—Ä —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
st.sidebar.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
selected_category = st.sidebar.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
    ["--"] + list(chemical_data_full.keys()) + ["–°–º–µ—à–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º"]
)

if selected_category != "--":
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if st.session_state.category != selected_category:
        st.session_state.category = selected_category
        st.session_state.score = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        get_new_question(selected_category)
        st.rerun() # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞
    st.header(f"–¢–µ–º–∞: {st.session_state.category}")
    st.subheader(f"–í–∞—à —Å—á–µ—Ç: {st.session_state.score}")

    # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
    if st.session_state.current_question:
        q = st.session_state.current_question
        st.write(f"–í–≤–µ–¥–∏—Ç–µ **{q['type']}** —Ñ–æ—Ä–º—É–ª—É –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:")
        st.info(f"## **{q['compound']}**")

        # –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞
        with st.form(key="answer_form"):
            user_answer = st.text_input("–í–∞—à –æ—Ç–≤–µ—Ç:", key="user_input")
            submit_button = st.form_submit_button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")

        if submit_button and user_answer:
            # –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
            cleaned_user = user_answer.strip().upper().replace("-", "")
            cleaned_correct = q['answer'].strip().upper().replace("-", "")

            if cleaned_user == cleaned_correct:
                st.session_state.score += 1
                st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            else:
                st.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {q['answer']}")
                st.write(f"**–í—Å–µ —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è '{q['compound']}':**")
                st.write(f"- –ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è: `{q['all_formulas']['–º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è']}`")
                st.write(f"- –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è: `{q['all_formulas']['—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è']}`")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            get_new_question(st.session_state.category)
            st.rerun()

else:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.")
